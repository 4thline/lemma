<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
       This POM should be used to build the distribution package and the site. Make sure you execute both
       'package' and 'site' lifecycles first with the regular pom.xml, then execute both with this POM.
       Actually, you should call 'post-site' here, to get the clean version of the website:

       Building the distribution:

       $ mvn clean package
       $ mvn -f dist-pom.xml clean package

       Building the website:

       $ mvn clean site
       $ mvn -f dist-pom.xml clean post-site

       And this is just a reminder for me, you can ignore it:

       mvn -f dist-pom.xml clean post-site; rm -r ~/work/webroot/vhosts/8080/4thline.org/projects/lemma/*; cp -R target/site/* ~/work/webroot/vhosts/8080/4thline.org/projects/lemma/
       
    -->

    <!-- ##################################################################################################### -->

    <groupId>org.fourthline.lemma</groupId>
    <artifactId>lemma</artifactId>
    <version>1.1.0</version>
    <packaging>pom</packaging>

    <!-- ##################################################################################################### -->

    <name>Lemma</name>
    <url>http://4thline.org/projects/lemma</url>

    <licenses>
        <license>
            <name>GNU Affero General Public License, Version 3</name>
            <url>http://www.gnu.org/licenses/agpl.txt</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <organization>
        <name>4th Line GmbH, Switzerland</name>
        <url>http://4thline.com</url>
    </organization>

    <developers>
        <developer>
            <id>cb</id>
            <name>Christian Bauer</name>
            <email>cb_AT_4thline.com</email>
            <organization>4th Line GmbH, Switzerland</organization>
            <organizationUrl>http://4thline.com</organizationUrl>
            <roles>
                <role>Project Lead</role>
            </roles>
            <timezone>+1</timezone>
        </developer>
    </developers>

    <distributionManagement>
        <repository>
            <id>4thline.org</id>
            <url>scpexe://4thline.org/webroot/vhosts/8080/4thline.org/m2/</url>
        </repository>
    </distributionManagement>

    <!-- ##################################################################################################### -->

    <pluginRepositories>
        <pluginRepository>
            <id>4thline-repo</id>
            <url>http://4thline.org/m2</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <!-- ##################################################################################################### -->

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <testng.version>6.2</testng.version>

    </properties>

    <!-- ##################################################################################################### -->

    <build>

        <pluginManagement>
            <plugins>

                <!-- Assembly -->
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>2.2.1</version>
                </plugin>

                <!-- Manual generation settings -->
                <plugin>
                    <groupId>org.fourthline.lemma</groupId>
                    <artifactId>lemma-maven-plugin</artifactId>
                    <version>${project.version}</version>
                    <configuration>
                        <sourceDirectories>
                            <sourceDirectory>core/src/test/java</sourceDirectory>
                        </sourceDirectories>
                    </configuration>
                </plugin>

                <!-- Ant fallback -->
                <plugin>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>1.3</version>
                </plugin>

                <!-- Website lifecycle -->
                <plugin>
                    <artifactId>maven-site-plugin</artifactId>
                    <version>3.3</version>
                    <dependencies>
                        <!-- We have raw XHTML files -->
                        <dependency>
                            <groupId>org.apache.maven.doxia</groupId>
                            <artifactId>doxia-module-xhtml</artifactId>
                            <version>1.1.2</version>
                        </dependency>
                    </dependencies>
                </plugin>

            </plugins>
        </pluginManagement>

        <plugins>

            <!-- Package a "legacy" distribution ZIP file -->
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <executions>
                    <execution>
                        <id>make-distribution</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptors>
                        <descriptor>src/dist/assembly.xml</descriptor>
                    </descriptors>
                    <workDirectory>target/assembly/work</workDirectory>
                    <appendAssemblyId>false</appendAssemblyId>
                    <finalName>${project.artifactId}-distribution-${project.version}</finalName>
                </configuration>
            </plugin>

            <!-- Generate documentation for distribution packaging -->
            <plugin>
                <groupId>org.fourthline.lemma</groupId>
                <artifactId>lemma-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>prepare-package-manual</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>manual</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- We want some other stuff on our website... -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>finalize-site</id>
                        <phase>post-site</phase>
                        <configuration>
                            <tasks>
                                <copy todir="${project.reporting.outputDirectory}">
                                    <fileset dir="core/target/site">
                                        <include name="apidocs/**/*"/>
                                        <include name="xref/**/*"/>
                                        <include name="xref-test/**/*"/>
                                    </fileset>
                                </copy>

                                <delete dir="${project.reporting.outputDirectory}/css"/>
                                <delete dir="${project.reporting.outputDirectory}/images"/>
                                <delete dir="${project.reporting.outputDirectory}/manual/css"/>
                                <delete file="${project.reporting.outputDirectory}/project-reports.html"/>

                                <move todir="${project.reporting.outputDirectory}">
                                    <fileset dir="${project.reporting.outputDirectory}">
                                        <include name="**/*.html"/>
                                        <exclude name="**/apidocs/**/*"/>
                                        <exclude name="**/xref/**/*"/>
                                        <exclude name="**/xref-test/**/*"/>
                                    </fileset>
                                    <mapper type="glob" from="*.html" to="*.xhtml"/>
                                </move>

                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Website lifecycle -->
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <reportPlugins>
                        <!-- THESE IGNORE GLOBAL PLUGIN MANAGEMENT! -->

                        <!-- Build the manual for 'site' lifecycle -->
                        <plugin>
                            <groupId>org.fourthline.lemma</groupId>
                            <artifactId>lemma-maven-plugin</artifactId>
                            <configuration>
                                <sourceDirectories>
                                    <sourceDirectory>core/src/test/java</sourceDirectory>
                                </sourceDirectories>
                            </configuration>
                            <reportSets>
                                <reportSet>
                                    <reports>
                                        <report>site-manual</report>
                                    </reports>
                                </reportSet>
                            </reportSets>
                        </plugin>

                    </reportPlugins>
                </configuration>
            </plugin>

        </plugins>

    </build>

    <!-- ##################################################################################################### -->

    <!-- These hide the "errors" during Javadoc index creation - yes, it's stupid. -->
    <dependencies>

        <dependency>
            <groupId>org.fourthline.lemma</groupId>
            <artifactId>lemma-core</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>junit</groupId>
                    <artifactId>junit</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

    </dependencies>

</project>
